.app {
	text-align: center;
}

.logo {
	height: 40vmin;
	pointer-events: none;
}

.header {
	background-color: #282c34;
	min-height: 100vh;
	display: flex;
	flex-direction: column;
	align-items: center;
	justify-content: center;
	font-size: calc(10px + 2vmin);
	color: white;
}

/* Если подключать только CSS-файл со всеми стилями в index.html, мы нарушим принцип компонентного подхода, который даёт нам большие преимущества в разработке.
Но иногда может потребоваться подключить CSS к index.html, чтобы применить какие-то общие стили, касающиеся сразу всего приложения, а не отдельных компонентов (например, reset.css для сброса стилей).
Одними из самых популярных решений для стилизации компонентов в React являются CSS-модули и styled-components.
CSS-модули — CSS-файлы, в которых все классы и анимации по умолчанию находятся в локальной области видимости, что позволяет избежать конфликтов имен классов.
Create React App из коробки поддерживает CSS-модули. Для того, чтобы подключить модуль, необходимо, чтобы CSS-файл оканчивался на .module.css вместо обычного .css, импортировать объект из данного файла в компонент:
import styles from './MyComponent.module.css';
и использовать имена классов из данного объекта внутри компонента вместо обычных имен классов:

<button className={styles.button}>Click me!</button>
styled-components — это популярная библиотека для стилизации React-компонентов с использованием подхода CSS-in-JS. Она позволяет писать CSS-код непосредственно в JS-файле компонента, что упрощает управление стилями и помогает избежать конфликтов имен.
Tailwind — ещё один из способов для работы со стилями, использующий подход Atomic CSS. Он заключается в том, чтобы разбить все стили на небольшие, независимые классы, которые могут быть многократно использованы в разных частях приложения. */
